!function(t){var e={};function o(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,o),i.l=!0,i.exports}o.m=t,o.c=e,o.d=function(t,e,n){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)o.d(n,i,function(e){return t[e]}.bind(null,i));return n},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="",o(o.s=2)}([function(t,e,o){},function(t,e){const o=document.createElement("template");o.innerHTML='\n<style>\n    * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n    }\n\n    *:focus {\n      outline: none;\n    }\n\n    :host {\n      display: block;\n      margin: 0.9rem 0;\n      cursor: pointer;\n    }\n\n    .project-name:hover {\n      background-color: aqua !important;\n      transition: all .3s;\n    }\n\n    li {\n      list-style: none;\n      display: flex;\n      align-items: center;\n    }\n\n\n    .project-edit-input,\n    .project-update-btn {\n      display: none;\n    }\n\n   :host([mode="edit"]) .project-edit-input,\n   :host([mode="edit"]) .project-update-btn\n    {\n      display: inline-block;\n    }\n\n   :host([mode="edit"]) .project-edit-btn,\n   :host([mode="edit"]) .project-name {\n     display: none;\n   }\n\n  .project-add-btn, \n  .project-delete-btn, \n  .project-edit-btn, \n  .project-update-btn{\n    font-size: 1.2rem;\n    width: 2.3rem;\n    height: 2.3rem;\n    border-radius: 50%;\n    color: white;\n    background: linear-gradient( to top left, DimGray, #222 );\n    font-weight: bold;\n    font-family: \'Courier New\', Courier, monospace;\n    border: 2px solid #555;\n    border-bottom: 2px solid DimGray;\n    border-right: 2px solid DimGray;\n    cursor: pointer;\n    transition: all 125ms cubic-bezier(0, 1.47, 0, 2.2);\n  }\n\n  .project-delete-btn{\n    margin-left: .6rem;\n  }\n\n  .project-todo-count {\n    background-color: #ff69b4db;\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 50%;\n    width: 2rem;\n    height: 2rem;\n    font-size: 1.3rem;\n    opacity: 0.9;\n    margin: 0 0.6rem;\n    cursor: default;\n    color: black;\n  }\n\n  .project-name {\n    background-color: white;\n    font-family: \'Kalam\', cursive;\n    border: 2px outset lightskyblue;\n    border-radius: .3rem;\n    padding: .2rem 1.4rem;\n    transition: all 100ms ease-in-out;\n    width: 77%;\n  }\n  .project-edit-input {\n    padding: 0.3rem 1.5rem;\n    border-radius: 3px;\n    font-family: kalam, Courier, monospace;\n    font-size: 1.6rem;\n  } \n\n  .project-edit-btn {\n    padding-top: 0.15rem;\n  }\n  </style>\n\n  <li class="project">\n    <button class="project-edit-btn">âœŽ</button>\n    <button class="project-update-btn">+</button>\n    <span class="project-todo-count"></span>\n    <input class="project-edit-input" maxlength="30"></input> \n    <span class="project-name"></span>\n    <button class="project-delete-btn">-</button>\n  </li>\n';class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(o.content.cloneNode(!0)),this._todos=[]}connectedCallback(){this.index=this.getAttribute("index"),this.name=this.getAttribute("name"),this.count=this.getAttribute("count"),this.backgroundColor=this.getAttribute("background-color"),this.$projectName=this.shadowRoot.querySelector(".project-name"),this.$projectEditInput=this.shadowRoot.querySelector(".project-edit-input");const t=this.shadowRoot.querySelector(".project-todo-count"),e=this.shadowRoot.querySelector(".project-delete-btn"),o=this.shadowRoot.querySelector(".project-edit-btn"),n=this.shadowRoot.querySelector(".project-update-btn");this.$projectEditInput.addEventListener("keyup",this._handleUpdateProject.bind(this)),n.addEventListener("click",this._handleUpdateProject.bind(this)),e.addEventListener("click",this._handleDeleteProject.bind(this)),o.addEventListener("click",this._handleEditProject.bind(this)),this.$projectName.addEventListener("click",this._handleActiveProject.bind(this)),t.textContent=this.count,this.$projectName.textContent=this.name,this.$projectName.style.backgroundColor=this.backgroundColor}static get observedAttributes(){return["background-color"]}attributeChangedCallback(t,e,o){"background-color"===t&&(this.shadowRoot.querySelector(".project-name").style.backgroundColor=o)}_handleActiveProject(){const t=this._createNewEvent("setActiveProject",this.index);this.dispatchEvent(t)}_handleDeleteProject(){const t=this._createNewEvent("deleteProject",this.index);this.dispatchEvent(t)}_handleEditProject(t){this.setAttribute("mode","edit"),this.$projectEditInput.value=this.name,this.$projectEditInput.focus()}_handleUpdateProject(t){if(13===t.keyCode||"click"===t.type){const t=this._createNewEvent("editProject",{newName:this.$projectEditInput.value,index:this.index});this.dispatchEvent(t),this.removeAttribute("mode")}}_createNewEvent(t,e){return new CustomEvent(t,{bubbles:!0,composed:!0,detail:e})}}customElements.define("app-project",n)},function(t,e,o){"use strict";o.r(e);o(0);class n{constructor(t){this.name=t,this.todos=[]}}class i{constructor(t,e,o,n=!1){this.description=t,this.dueDate=e,this.priority=o,this.completed=n}}class r{getProjects(){const t=JSON.parse(localStorage.getItem("projects"));return t||[new n("New Project")]}saveProjects(t){localStorage.setItem("projects",JSON.stringify(t))}}const d=document.createElement("template");d.innerHTML="\n  <style>\n  </style>\n";class s extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(d.content.cloneNode(!0)),this._store=new r,this._projects=this._store.getProjects(),this._activeProject=this._projects[0],this._activeProjectIndex=0,this._activeProjectColor="aqua";const t=document.querySelector(".project-add-btn"),e=document.querySelector(".todo-add-btn");this.$projectInput=document.querySelector(".project-input"),this.$todoList=document.querySelector(".todo-list"),this.$projectInput.addEventListener("keyup",this._initProject.bind(this)),t.addEventListener("click",this._initProject.bind(this)),this.addEventListener("deleteProject",this._deleteProject.bind(this)),this.addEventListener("editProject",this._editProject.bind(this)),this.addEventListener("setActiveProject",this._setActiveProject.bind(this)),this.$todoList.addEventListener("updateTodo",this._updateTodo.bind(this)),this.$todoList.addEventListener("deleteTodo",this._deleteTodo.bind(this)),this.$todoList.addEventListener("todoCompletedToggle",this._todoCompletedToggle.bind(this)),e.addEventListener("click",this._initTodo.bind(this)),this._setInputCurrentDate(),this._render()}connectedCallback(){}_todoCompletedToggle(t){this._projects[t.detail.projectIndex].todos[t.detail.todoIndex].completed=t.detail.completed,this._store.saveProjects(this._projects)}_updateTodo(t){this._projects[t.detail.projectIndex].todos[t.detail.todoIndex]=t.detail.updatedTodo,this._store.saveProjects(this._projects),this._render()}_setActiveProject(t){this._activeProjectIndex=t.detail,this._activeProject=this._projects[t.detail],this._render()}_initProject(t){if(8!==t.keyCode)if(""!==this.$projectInput.value){if("click"===t.type||13===t.keyCode){document.querySelector(".flash").style.display="none";const t=this.$projectInput.value;this.$projectInput.value="",this._projects.push(new n(t)),this._store.saveProjects(this._projects),this._render()}}else document.querySelector(".flash").style.display="block"}_renderProject(t,e){const o=document.createElement("app-project");o.setAttribute("index",e),o.setAttribute("name",t.name),o.setAttribute("count",t.todos.length),o.setAttribute("background-color",this._getActiveBackgroundColor(e)),this.shadowRoot.appendChild(o)}_initTodo(t){t.preventDefault();const{value:e}=document.querySelector(".todo-description"),{value:o}=document.querySelector(".todo-date"),{value:n}=document.querySelector(".todo-priority");if(""===e.trim()||""===o.trim())return void(document.querySelector(".flash-fields").style.display="block");const r=new i(e,new Date(o).toDateString(),n);this._activeProject.todos.push(r),this._store.saveProjects(this._projects),document.querySelector(".todo-create").reset(),document.querySelector(".flash-fields").style.display="none",this._render()}_renderTodo(t,e){const o=document.createElement("app-todo");o.setAttribute("desc",t.description),o.setAttribute("date",t.dueDate),o.setAttribute("priority",t.priority),o.setAttribute("project-index",this._activeProjectIndex),o.setAttribute("todo-index",e),o.setAttribute("completed",t.completed),o.setAttribute("priority",t.priority),this.$todoList.appendChild(o)}_deleteProject(t){this._projects.splice(t.detail,1),this._store.saveProjects(this._projects),this._render()}_editProject(t){this._projects[t.detail.index].name=t.detail.newName,this._store.saveProjects(this._projects),this._render()}_deleteTodo(t){this._activeProject.todos.splice(t.detail,1),this._store.saveProjects(this._projects),this._render()}_resetView(){this.shadowRoot.innerHTML="",this.$todoList.innerHTML=""}_setInputCurrentDate(){const t=(new Date).toISOString().split("T")[0];document.querySelector(".todo-date").setAttribute("min",t)}_getActiveBackgroundColor(t){return t===+this._activeProjectIndex?this._activeProjectColor:"aquamarine"}_render(){this._resetView(),this._projects.forEach((t,e)=>{this._renderProject(t,e),e===+this._activeProjectIndex&&t.todos.length>0&&t.todos.forEach((t,e)=>this._renderTodo(t,e))})}}customElements.define("app-project-list",s);o(1);const c=document.createElement("template");c.innerHTML='\n  <style>\n\n  :host {\n    margin-bottom: -1.2rem !important;\n    display: block;\n  }\n\n    *:focus {\n      outline: none;\n    }\n\n    li {\n      list-style-type: none;\n      margin-top: 1rem;\n      margin-bottom: 1rem;\n    }\n\n    .todo-description-input,\n    .todo-date-input,\n    .todo-priority-select,\n    .todo-update-btn {\n      display: none;\n    }\n\n    :host([mode="edit"]) .todo-description-input, \n    :host([mode="edit"]) .todo-date-input,\n    :host([mode="edit"]) .todo-priority-select, \n    :host([mode="edit"]) .todo-update-btn {\n      display: inline-block;\n    }\n\n    :host([mode="edit"]) .edit-wrapper {\n      display: inline-flex;\n    }\n\n    :host([mode="edit"]) .todo-description, \n    :host([mode="edit"]) .todo-date, \n    :host([mode="edit"]) .todo-priority,\n    :host([mode="edit"]) .todo-edit-btn,\n    :host([mode="edit"]) .show-wrapper{\n      display: none;\n    }\n\n    .show-wrapper, .edit-wrapper {\n      display: inline-block;\n    }\n\n    .todo-description-input,\n    .todo-date-input,\n    .todo-priority-select{\n      padding: 0.4rem 0.9rem;\n      padding-top: 0.7rem;\n      border-radius: 3px;\n      font-size: 1.3rem;\n      font-family: \'Courier Prime\', monospace;\n      border: 2px inset ghostwhite;\n    }\n\n    .todo-date-input{\n      padding-top: 0.48rem;\n      padding-bottom: 0.2rem;\n      margin-left: 6px;\n      margin-right: 6px;\n    }\n\n    .todo-edit-btn,\n    .todo-update-btn,\n    .todo-delete-btn{\n      font-size: 1.1rem;\n      width: 2.3rem;\n      height: 2.3rem;\n      border-radius: 50%;\n      color: white;\n      background: linear-gradient( to top left, DimGray, #222 );\n      font-weight: bold;\n      font-family: \'Courier New\', Courier, monospace;\n      border: 2px solid #555;\n      border-bottom: 2px solid DimGray;\n      border-right: 2px solid DimGray;\n      cursor: pointer;\n      padding-left: 0.6rem;\n      padding-top: 0.3rem;\n      transition: all 125ms cubic-bezier(0, 1.47, 0, 2.2);\n    }\n\n    .todo-completed {\n      width: 1.5rem;\n      height: 1.5rem;\n    }\n\n    .priority-alert{\n      border-radius: 57%;\n      display: inline-flex;\n      padding: 0;\n      width: 2rem;\n      height: 2rem;\n      align-items: center;\n      justify-content: center;\n      position: relative;\n      top: .1px;\n      line-height: 0.1;\n    }\n\n    .todo-edit-btn {\n      padding-left: 0.48rem;\n      padding-top: 0.3rem;\n    }\n\n    .todo-date, .todo-description {\n      padding: 0;\n    }\n\n    .high {\n      border: 3px solid red;\n    }\n\n    .medium {\n      border: 3px solid #ffb100;\n    }\n\n    .low {  \n      border: 3px solid yellow;\n    }\n\n    .todo-date {\n      color: darkviolet;\n    }\n\n    .todo-description {\n      font-family: \'Courier Prime\';\n    }\n    .show-wrapper {\n      padding: .3rem 0.9rem;\n      border-radius: 1.2px;\n      width: 85%;\n      display: inline-flex;\n      justify-content: space-between;\n      font-family: \'Courier Prime\';\n    } \n\n    .todo-description-input {\n      flex-grow: 1;\n    }\n\n    .edit-wrapper {\n      width: 87.6%;\n      display: none;\n      margin-bottom: 0.5em;\n    }\n\n    .todo-delete-btn {\n      transform: translateY(-2px);\n    }\n  </style>\n\n  <li>\n    <button class="todo-edit-btn">âœŽ</button>\n    <button class="todo-update-btn">+</button>\n\n    <div class="show-wrapper">\n      <span class="todo-description"></span>\n      <div class="info">\n        <span class="todo-date"></span>\n        <span class="todo-priority priority-alert"></span>\n      </div>\n    </div>\n\n    <div class="edit-wrapper">\n      <input type="text" class="todo-description-input" maxlength="44">\n      <input type="date" class="todo-date-input">\n      <input type="number" class="todo-priority-select" value="3" min="1", max="3">\n    </div>\n\n    <input type="checkbox" class="todo-completed">\n    <button class="todo-delete-btn">-</button>\n  </li>\n';class a extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(c.content.cloneNode(!0));const t=this.shadowRoot.querySelector(".todo-delete-btn"),e=this.shadowRoot.querySelector(".todo-edit-btn");this.$todoDateInput=this.shadowRoot.querySelector(".todo-date-input"),this.$todoPrioritySelect=this.shadowRoot.querySelector(".todo-priority-select"),this.$todoDescriptionInput=this.shadowRoot.querySelector(".todo-description-input"),this.$todoUpdateBtn=this.shadowRoot.querySelector(".todo-update-btn"),this.$todoCompleted=this.shadowRoot.querySelector(".todo-completed"),this.$todoCompleted.addEventListener("change",this._handleTodoCompleted.bind(this)),this.$todoUpdateBtn.addEventListener("click",this._handleTodoUpdate.bind(this)),e.addEventListener("click",this._handleTodoEdit.bind(this)),t.addEventListener("click",this._handleTodoDelete.bind(this)),this._setInputCurrentDate()}connectedCallback(){this.projectIndex=this.getAttribute("project-index"),this.todoIndex=this.getAttribute("todo-index"),this.description=this.getAttribute("desc");const t=this.getAttribute("date");this.date=this._convertDateToISOString(t),this.priority=this.getAttribute("priority"),this.completed="true"===this.getAttribute("completed"),this.priority=this.getAttribute("priority");const e=this.shadowRoot.querySelector(".todo-description"),o=this.shadowRoot.querySelector(".todo-date"),n=this.shadowRoot.querySelector(".todo-priority");e.textContent=this.description,o.textContent=new Date(this.date).toLocaleDateString().replace(/\//g,"-"),n.textContent=this.priority,this.$todoCompleted.checked=this.completed,this._setPriorityAlert(this.priority)}_handleTodoCompleted(t){const e={projectIndex:this.projectIndex,todoIndex:this.todoIndex,completed:t.target.checked},o=this._createNewEvent("todoCompletedToggle",e);this.dispatchEvent(o)}_handleTodoUpdate(){const t=this.$todoDescriptionInput.value,e=this.$todoDateInput.value,o=this.$todoPrioritySelect.value,n=this.$todoCompleted.checked,r=new i(t,e,o,n),d={projectIndex:this.projectIndex,todoIndex:this.todoIndex,updatedTodo:r},s=this._createNewEvent("updateTodo",d);this.dispatchEvent(s),this.removeAttribute("mode")}_handleTodoDelete(){const t=this._createNewEvent("deleteTodo",this.todoIndex);this.dispatchEvent(t)}_handleTodoEdit(){this.setAttribute("mode","edit"),this.$todoDateInput.value=this.date,this.$todoPrioritySelect.value=this.priority,this.$todoDescriptionInput.value=this.description,this.$todoDescriptionInput.focus()}_createNewEvent(t,e){return new CustomEvent(t,{bubbles:!0,composed:!0,detail:e})}_setInputCurrentDate(){const t=(new Date).toISOString().split("T")[0];this.shadowRoot.querySelector(".todo-date-input").setAttribute("min",t)}_convertDateToISOString(t){return new Date(t).toISOString().split("T")[0]}_setPriorityAlert(t){const e=this.shadowRoot.querySelector(".todo-priority");3==+t?(e.classList.add("low"),e.classList.remove("medium"),e.classList.remove("high")):2==+t?(e.classList.add("medium"),e.classList.remove("high"),e.classList.remove("low")):(e.classList.add("high"),e.classList.remove("medium"),e.classList.remove("low"))}}customElements.define("app-todo",a)}]);